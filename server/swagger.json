{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "DragAndDrop Api",
    "description": "",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "token"
      }
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "localhost"
    }
  ],
  "tags": [
    {
      "name": "Projects",
      "description": "API for projects"
    },
    {
      "name": "Tasks",
      "description": "API for tasks for one project"
    },
    {
      "name": "Statuses",
      "description": "API for statuses for one project"
    },
    {
      "name": "Single task",
      "description": "API for single task"
    },
    {
      "name": "Task statuses",
      "description": "API for task statuses"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Get all user`s projects in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Projects"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Create/update/delete project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Post Project"
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/cats/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the cat that we want to match",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Cats"
        ],
        "summary": "Get cat with given ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Cat with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cat"
            }
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      },
      "put": {
        "summary": "Update cat with given ID",
        "tags": [
          "Cats"
        ],
        "requestBody": {
          "description": "Cat Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Cat"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Cat with new values of properties",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Cat"
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      },
      "delete": {
        "summary": "Delete cat with given ID",
        "tags": [
          "Cats"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Delete Cat with id",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "Failed. Cat not found."
          }
        }
      }
    }
  },
  "definitions": {
    "Post Project": {
      "properties": {
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "self_id": {
          "type": "string"
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "id": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Projects": {
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    }
  }
}
